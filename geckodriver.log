1565193900275	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.qjTzN6VayLEo"
1565193901792	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565193901792	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565193901792	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565193901793	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565193904643	Marionette	INFO	Listening on port 54725
1565193904722	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 20132, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[[Child 19896, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19896, Chrome_ChildThread] WARNING: pipe error: 109: file z:/ta1565194023840	Marionette	INFO	Stopped listening on port 54725

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

e.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 1684, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565194023375	Marionette	INFO	Stopped listening on port 54789

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

4014175	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565194014175	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565194014175	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565194016113	Marionette	INFO	Listening on port 54849
1565194016294	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 19992, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20660, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ip[Child 9468, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563c_channel_win.cc, line 341
383129/[Child 20660, Chrome_ChildTbuild/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 9468, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ip1565194023044	Marionette	INFO	Stopped listening on port 54849

###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565196831531	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.THTRV2BVWTQq"
1565196833296	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565196833297	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565196833297	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565196833297	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565196835438	Marionette	INFO	Listening on port 55501
1565196835872	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
[Parent 8604, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 21192, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 21192, Chrome_ChildThread] WARNING: pipe er[Child 15928, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15928, Ch[Parent 8604, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19756, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19756, Chrome_ChildT1565197120090	Marionette	INFO	Stopped listening on port 55501

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565197126680	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.kB7ccCl2P6HQ"
1565197127271	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565197127271	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565197127271	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565197127271	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565197129148	Marionette	INFO	Listening on port 55581
1565197129421	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
1565198238485	Marionette	INFO	Stopped listening on port 55581
[
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565198247612	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.OQB3nGyyxIqb"
1565198248195	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565198248195	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565198248195	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565198248195	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565198250172	Marionette	INFO	Listening on port 55923
1565198250344	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: "Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15\nupdateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32\nonNewSelection@resource://devtools/client/inspector/inspector.js:1297:10\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\nsetNodeFront@resource://devtools/client/framework/selection.js:153:10\nonDetached@resource://devtools/client/inspector/inspector.js:1371:20\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\n_onMutations@resource://devtools/client/framework/selection.js:105:12\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15
updateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32
onNewSelection@resource://devtools/client/inspector/inspector.js:1297:10
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
setNodeFront@resource://devtools/client/framework/selection.js:153:10
onDetached@resource://devtools/client/inspector/inspector.js:1371:20
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
_onMutations@resource://devtools/client/framework/selection.js:105:12
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.error: "TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24\nonMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24
onMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.error: "Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15\nupdateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32\nonNewSelection@resource://devtools/client/inspector/inspector.js:1297:10\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\nsetNodeFront@resource://devtools/client/framework/selection.js:153:10\nonDetached@resource://devtools/client/inspector/inspector.js:1371:20\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\n_onMutations@resource://devtools/client/framework/selection.js:105:12\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15
updateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32
onNewSelection@resource://devtools/client/inspector/inspector.js:1297:10
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
setNodeFront@resource://devtools/client/framework/selection.js:153:10
onDetached@resource://devtools/client/inspector/inspector.js:1371:20
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
_onMutations@resource://devtools/client/framework/selection.js:105:12
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.error: "TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24\nonMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24
onMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

JavaScript warning: resource:///modules/UrlbarView.jsm, line 123: Array.reduce is deprecated; use Array.prototype.reduce instead
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: "Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15\nupdateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32\nonNewSelection@resource://devtools/client/inspector/inspector.js:1297:10\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\nsetNodeFront@resource://devtools/client/framework/selection.js:153:10\nonDetached@resource://devtools/client/inspector/inspector.js:1371:20\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\n_onMutations@resource://devtools/client/framework/selection.js:105:12\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15
updateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32
onNewSelection@resource://devtools/client/inspector/inspector.js:1297:10
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
setNodeFront@resource://devtools/client/framework/selection.js:153:10
onDetached@resource://devtools/client/inspector/inspector.js:1371:20
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
_onMutations@resource://devtools/client/framework/selection.js:105:12
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.error: "TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24\nonMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24
onMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn1.child1/context18' can't be sent as the connection is closed."
[Parent 17300, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 17300, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 14752, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 14752, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341

###!!! [Child][MessageChannel] Error: (msgtype=0x530005,name=PHttpChannel::Msg_Cancel) Closed channel: cannot send/recv

[Parent 17300, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 17300, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 17724, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 17724, Chrome_Child1565204314810	Marionette	INFO	Stopped listening on port 55923

###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

199103051	Marionette	INFO	Stopped listening on port 56137

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565199126610	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.8KGcuUDg6MtT"
1565199127179	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565199127179	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565199127179	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565199127179	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565199129051	Marionette	INFO	Listening on port 56186
1565199129346	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565199364667	Marionette	INFO	Stopped listening on port 56186

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 13792
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

reenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565199297002	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565199297002	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565199297002	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565199298917	Marionette	INFO	Listening on port 56238
1565199299155	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Child 5460, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 5460, Chro1565199365596	Marionette	INFO	Stopped listening on port 56238

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565199751081	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.WWaaO2K72Fmp"
1565199751669	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565199751669	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565199751669	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565199751669	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565199753515	Marionette	INFO	Listening on port 56356
1565199753828	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 17576, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 17576, Chrome_ChildThread] WARNING: pipe error: 109: file z:/tas1565199809714	Marionette	INFO	Stopped listening on port 56356
[GPU 20
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565199817652	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.IjFWmuy2zqLR"
1565199818270	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565199818270	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565199818270	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565199818270	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565199820100	Marionette	INFO	Listening on port 56413
1565199820405	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 5444, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 11844, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 11844, Chrome_ChildThread] WARNING: pipe error: 109: [Parent 15028, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20600, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20600, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565199848761	Marionette	INFO	Stopped listening on port 56413

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565199858811	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.0u7LMKPo2QpR"
1565199859419	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565199859420	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565199859420	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565199859420	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565199861345	Marionette	INFO	Listening on port 56457
1565199861556	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 19960, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19960, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_151565199886091	Marionette	INFO	Stopped listening on port 56457

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 9176, Chro
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565200158033	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.SGYdPh9OzHtL"
1565200158609	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565200158609	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565200158610	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565200158610	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565200160549	Marionette	INFO	Listening on port 56589
1565200160758	Marionette	WARN	TLS certificate errors will be ignored for this session
1565200177364	Marionette	INFO	Stopped listening on port 56589

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565200522236	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.ZqbudqKMx7uf"
1565200522840	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565200522840	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565200522840	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565200522840	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565200524863	Marionette	INFO	Listening on port 56741
1565200524982	Marionette	WARN	TLS certificate errors will be ignored for this session
1565200598170	Marionette	INFO	Stopped listening on port 56741

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 6
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565200603354	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.pUAKTzhrBrMj"
1565200603945	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565200603946	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565200603946	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565200603946	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565200605860	Marionette	INFO	Listening on port 56800
1565200606601	Marionette	WARN	TLS certificate errors will be ignored for this session
1565200628484	Marionette	INFO	Stopped listening on port 56800
[GPU 7
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565200687446	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.ky4JHmT6vt4b"
1565200688071	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565200688071	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565200688071	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565200688071	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565200690036	Marionette	INFO	Listening on port 56844
1565200690191	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 15004, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 1501565200723989	Marionette	INFO	Stopped listening on port 56844

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565201259101	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.0Qu85LCFAbV7"
1565201259684	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565201259685	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565201259685	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565201259685	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565201261732	Marionette	INFO	Listening on port 56965
1565201261826	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Child 2940, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 2940, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565201296658	Marionette	INFO	Stopped listening on port 56965

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GP
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565201301724	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.BXHFSvMuvWRl"
1565201302302	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565201302302	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565201302303	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565201302303	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565201304309	Marionette	INFO	Listening on port 57010
1565201304457	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 15096, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 11565201484181	Marionette	INFO	Stopped listening on port 57010
[GP
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565201663540	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.oW85UNYDMpXr"
1565201664125	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565201664126	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565201664126	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565201664126	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565201666066	Marionette	INFO	Listening on port 57090
1565201666275	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 7756, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 7756, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/c1565201720627	Marionette	INFO	Stopped listening on port 57090

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565202201407	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.rEkEdkmQJpf3"
1565202201980	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565202201980	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565202201980	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565202201980	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565202203942	Marionette	INFO	Listening on port 57233
1565202204149	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 20868, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 20868, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565202231565	Marionette	INFO	Stopped listening on port 57233
[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565202530047	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.i5FNX5Oo3Qlu"
1565202530654	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565202530654	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565202530655	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565202530655	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565202532562	Marionette	INFO	Listening on port 57347
1565202532775	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 15096, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20908, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20908, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc[Parent 13172, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565202558025	Marionette	INFO	Stopped listening on port 57347

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565202566283	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.1Ho8Ji0L99tQ"
1565202566863	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565202566863	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565202566864	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565202566864	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565202568734	Marionette	INFO	Listening on port 57389
1565202569010	Marionette	WARN	TLS certificate errors will be ignored for this session
1565202729769	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.CoZfpsPaTxKh"
1565202730377	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565202730377	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565202730377	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565202730378	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565202732327	Marionette	INFO	Listening on port 57484
1565202732493	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1565203063224	Marionette	INFO	Stopped listening on port 57484

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203095051	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.0MUUwy9bDM7k"
1565203095640	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203095640	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203095641	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203095641	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203098009	Marionette	INFO	Listening on port 57641
1565203098284	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 4812, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 4812, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_156331565203106679	Marionette	INFO	Stopped listening on port 57641

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203204323	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.oGYYfxna6ghM"
1565203204936	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203204936	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203204936	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203204936	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203206932	Marionette	INFO	Listening on port 57711
1565203207054	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 8116, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 11604, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 17956, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 17951565203225986	Marionette	INFO	Stopped listening on port 57711

###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203412657	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.rzesCSmyVYsf"
1565203413282	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203413282	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203413282	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203413282	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203415200	Marionette	INFO	Listening on port 57854
1565203415392	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 18916, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 18916, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

1565203442735	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.Q2OgOmLJPQaz"
1565203443301	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203443301	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203443302	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203443302	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203445310	Marionette	INFO	Listening on port 57894
1565203445498	Marionette	WARN	TLS certificate errors will be ignored for this session
1565203500345	Marionette	INFO	Stopped listening on port 57894

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 14268, Chrom1565203503479	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.3Eg8DxUV4oL8"
1565203504062	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203504062	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203504063	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203504063	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203505973	Marionette	INFO	Listening on port 57945
1565203506223	Marionette	WARN	TLS certificate errors will be ignored for this session
1565203553099	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.LURtPe7hg03L"
1565203553697	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203553697	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203553698	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203553698	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203555986	Marionette	INFO	Listening on port 57984
1565203556333	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 19184, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromiu[Parent 20336, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
m/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19184, Chrome_ChildThread] WARNING: pipe [Parent 20336, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15008, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15008, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565203579492	Marionette	INFO	Stopped listening on port 57984

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 19216, C
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203813245	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.1kWlG8seHkeX"
1565203813857	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203813857	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203813857	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203813857	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203815772	Marionette	INFO	Listening on port 58155
1565203815978	Marionette	WARN	TLS certificate errors will be ignored for this session

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Child 21232, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565203865562	Marionette	INFO	Stopped listening on port 58155
[GPU 20
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203872533	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.fn6iHPTpRpsP"
1565203873155	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203873155	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203873155	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203873155	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203875298	Marionette	INFO	Listening on port 58197
1565203875795	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 20168, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 20168, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565203895681	Marionette	INFO	Stopped listening on port 58197

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 1
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203903599	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.oC6pDeR41PXJ"
1565203904205	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203904205	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203904206	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203904206	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203906231	Marionette	INFO	Listening on port 58236
1565203906358	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 19820, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15520, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 3992, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 1565203909678	Marionette	INFO	Stopped listening on port 58236

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203914660	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.8SPHuRqqRD2i"
1565203915239	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203915239	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203915239	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203915239	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203917213	Marionette	INFO	Listening on port 58273
1565203917389	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 20108, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20108, Chrome_ChildThread][Parent 21108, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565203963565	Marionette	INFO	Stopped listening on port 58273
[GPU 21480,
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565203970190	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.7q4vCTiuRTK4"
1565203970779	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565203970779	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565203970779	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565203970779	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565203972755	Marionette	INFO	Listening on port 58318
1565203972925	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565204043124	Marionette	INFO	Stopped listening on port 58318

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 21444, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341

###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565204081606	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.W1s54KKKZ2wK"
1565204082137	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565204082137	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565204082137	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565204082137	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565204084212	Marionette	INFO	Listening on port 58386
1565204084342	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 9228, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565204134369	Marionette	INFO	Stopped listening on port 58386

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[G
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565205624428	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.w5L934hibWQV"
1565205625721	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565205625721	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565205625721	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565205625722	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565205627894	Marionette	INFO	Listening on port 59098
1565205628289	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 17208, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 17208, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_c1565205645550	Marionette	INFO	Stopped listening on port 59098

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 1
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565205702546	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.NdWOG0el5OKB"
1565205703156	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565205703156	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565205703157	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565205703157	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565205705141	Marionette	INFO	Listening on port 59150
1565205705288	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 13624, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565205714137	Marionette	INFO	Stopped listening on port 59150

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 1
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565206386942	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.o8icSb3dCP7Q"
1565206387573	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565206387573	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565206387573	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565206387573	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565206389573	Marionette	INFO	Listening on port 59306
1565206389685	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 17260, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565206427930	Marionette	INFO	Stopped listening on port 59306
[GPU 1
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565206712441	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.7yYLMteItgOa"
1565206713032	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565206713032	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565206713032	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565206713032	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565206714887	Marionette	INFO	Listening on port 59506
1565206715173	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 16580, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[[Parent 10916, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565206729442	Marionette	INFO	Stopped listening on port 59506

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565206788605	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.DDPBVnebDiLV"
1565206789196	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565206789196	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565206789196	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565206789196	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565206791143	Marionette	INFO	Listening on port 59565
1565206791442	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 18168, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18168, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565206814139	Marionette	INFO	Stopped listening on port 59565

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 6508,
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565206821452	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.uVPZS7Xk8vR5"
1565206822162	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565206822162	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565206822163	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565206822163	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565206824162	Marionette	INFO	Listening on port 59608
1565206824185	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 11888, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 20212, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565206882243	Marionette	INFO	Stopped listening on port 59608

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 21080, Chrome_ChildT
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565206889702	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.ijVsFZdFnTfx"
1565206890274	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565206890274	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565206890274	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565206890274	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565206892264	Marionette	INFO	Listening on port 59652
1565206892425	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 19732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 19732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19280, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19280, Chrome_ChildTh1565206999819	Marionette	INFO	Stopped listening on port 59652

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565207979546	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.zXEHakHO6G9o"
1565207980139	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565207980139	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565207980140	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565207980140	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565207982018	Marionette	INFO	Listening on port 59998
1565207982280	Marionette	WARN	TLS certificate errors will be ignored for this session
1565208053588	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.i7TUt3ZIJDgm"
1565208054165	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565208054165	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565208054165	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565208054165	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565208056063	Marionette	INFO	Listening on port 60053
1565208056313	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 19640, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565208135572	Marionette	INFO	Stopped listening on port 60053

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565209650527	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.T20i0HrsHKq8"
1565209651081	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565209651082	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565209651082	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565209651082	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565209652940	Marionette	INFO	Listening on port 60540
1565209653289	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565209723332	Marionette	INFO	Stopped listening on port 60540
[GPU 19
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565209729787	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.VCzof6LCjBjR"
1565209730307	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565209730307	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565209730308	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565209730308	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565209732177	Marionette	INFO	Listening on port 60582
1565209732517	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 11028, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19108, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 19108, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
*** UTM:SVC TimerManager:registerTimer called after profile-before-change notification. Ignoring timer registration for id: telemetry_modules_ping
1565209790834	Marionette	INFO	Stopped listening on port 60582
[GPU 2049
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565209982841	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.IHTwF6HQ6VzH"
1565209983352	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565209983353	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565209983353	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565209983353	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565209985179	Marionette	INFO	Listening on port 60645
1565209985570	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 13732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 13732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565209994565	Marionette	INFO	Stopped listening on port 60645

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[G
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565210044882	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.B45072tpa2fF"
1565210045387	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565210045387	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565210045387	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565210045388	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565210047261	Marionette	INFO	Listening on port 60686
1565210047610	Marionette	WARN	TLS certificate errors will be ignored for this session
1565210058977	Marionette	INFO	Stopped listening on port 60686

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 1
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565210081236	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.tYOlZL4texIr"
1565210081749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565210081749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565210081749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565210081749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565210083633	Marionette	INFO	Listening on port 60733
1565210083970	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 8668, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20772, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20772, Chrome_ChildThread] WARNIN1565210092348	Marionette	INFO	Stopped listening on port 60733

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565211587462	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.1le8vdDNfec2"
*** You are running in headless mode.
1565211588082	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565211588083	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565211588083	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565211588083	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565211589797	Marionette	INFO	Listening on port 61291
1565211590200	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

ing manifest: Invalid extension permission: about:reader*
1565211717955	Marionette	INFO	Listening on port 61345
1565211718452	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 9328, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 9328, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18948, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18948, Chrome_ChildThread] WARNI1565211765789	Marionette	INFO	Stopped listening on port 61345

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 18140, Chrome_ChildThread] WARNING: pipe e
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565211917480	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.qjtQvPt6aYDk"
1565211918006	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565211918006	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565211918006	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565211918007	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565211919972	Marionette	INFO	Listening on port 61463
1565211920214	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13


###!!! [Child][MessageChannel] Error: (msgtype=0x580015,name=PLayerTransaction::Msg_ClearCachedResources) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x940003,name=PTexture::Msg_Destroy) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580006,name=PLayerTransaction::Msg_ReleaseCompositable) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580005,name=PLayerTransaction::Msg_ReleaseLayer) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580005,name=PLayerTransaction::Msg_ReleaseLayer) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580005,name=PLayerTransaction::Msg_ReleaseLayer) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x10012,name=PAPZInputBridge::Msg___delete__) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x58001E,name=PLayerTransaction::Msg_Shutdown) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x2000D,name=PAPZ::Msg_Destroy) Channel error: cannot send/recv


###!!! [Child][MessageChannel::SendAndWait] Error: (msgtype=0x320017,name=PCompositorBridge::Msg_WillClose) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580015,name=PLayerTransaction::Msg_ClearCachedResources) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x940003,name=PTexture::Msg_Destroy) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580006,name=PLayerTransaction::Msg_ReleaseCompositable) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580005,name=PLayerTransaction::Msg_ReleaseLayer) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x580005,name=PLayerTransaction::Msg_ReleaseLayer) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x58001E,name=PLayerTransaction::Msg_Shutdown) Channel error: cannot send/recv


###!!! [Child][MessageChannel::SendAndWait] Error: (msgtype=0x320017,name=PCompositorBridge::Msg_WillClose) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x1E008F,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x35001A,name=PContent::Msg_RegisterChromeItem) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x1E008F,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x1E008F,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x1E008F,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x350119,name=PContent::Msg_AsyncMessage) Channel error: cannot send/recv

[Parent 12320, Gecko_IOThread] WARNING: pipe error: 232: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 502

###!!! [Child][MessageChannel] Error: (msgtype=0x580015,name=PLayerTransaction::Msg_ClearCachedResources) Channel error: cannot send/recv


###!!! [Child][MessageChannel] Error: (msgtype=0x58001E,name=PLayerTransaction::Msg_Shutdown) Channel error: cannot send/recv


###!!! [Child][MessageChannel::SendAndWait] Error: (msgtype=0x320017,name=PCompositorBridge::Msg_WillClose) Channel error: cannot send/recv

[Parent 12320, Gecko_IOThread] WARNING: pipe error: 232: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 502

###!!! [Parent][MessageChannel] Error: (msgtype=0x35000B,name=PContent::Msg_ReinitRendering) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x35000B,name=PContent::Msg_ReinitRendering) Channel error: cannot send/recv


###!!! [Parent][MessageChannel] Error: (msgtype=0x35000B,name=PContent::Msg_ReinitRendering) Channel error: cannot send/recv

[GFX1-]: Receive IPC close with reason=AbnormalShutdown
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
[GFX1-]: Receive IPC close with reason=Ab1565212143617	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.QS0uSbFgS3ko"
1565212144084	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565212144084	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565212144085	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565212144085	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565212145948	Marionette	INFO	Listening on port 61562
1565212146350	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 16864, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 16864, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src1565212184829	Marionette	INFO	Stopped listening on port 61562

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 39
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565212328811	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.4o8kZQ7Op05u"
1565212329316	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565212329316	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565212329318	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565212329318	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565212331200	Marionette	INFO	Listening on port 61646
1565212331539	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565212428857	Marionette	INFO	Stopped listening on port 61646

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565212493707	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.OgJ3LCHxIb3z"
1565212494241	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565212494242	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565212494242	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565212494242	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565212496235	Marionette	INFO	Listening on port 61721
1565212496438	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: "No localization found for [table.headers.cookies.hostOnly]"
console.error: "No localization found for [table.headers.cookies.isSecure]"
console.error: "No localization found for [table.headers.cookies.isHttpOnly]"
JavaScript warning: resource://devtools/client/shared/demangle.js, line 0: Successfully compiled asm.js code (total compilation time 79ms)
console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
console.error: "Task cancelled"
JavaScript error: chrome://global/content/contentAreaUtils.js, line 919: NS_ERROR_MALFORMED_URI: Component returned failure code: 0x804b000a (NS_ERROR_MALFORMED_URI) [nsIIOService.newURI]
console.error: "Task cancelled"
console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn1.child1/context18' can't be sent as the connection is closed."
[Parent 20596, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 16160, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 16160, Chrome_ChildThr[Child 21480, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 21480, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/1565212902221	Marionette	INFO	Stopped listening on port 61721

###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565212916201	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.04OY8iM60GMB"
1565212916710	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565212916710	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565212916710	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565212916710	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565212918541	Marionette	INFO	Listening on port 61812
1565212918930	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
[Child 20556, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chr[Child 8180, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1o5me/common/ipc_channel_win.cc, line 341
633831[Child 20556, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_w29/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 8180, Chrome_ChildThread]1565213045525	Marionette	INFO	Stopped listening on port 61812
[GPU 2080, Chrome_ChildThread] WA
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213054435	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.oBPtgnORj7q7"
1565213054967	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213054967	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213054967	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213054967	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213056885	Marionette	INFO	Listening on port 61861
1565213057166	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 18636, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20736, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[[Child 20736, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chroCmhei/common/ipc_channel_win.cc, line 341
ld 18636, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel[Parent 5440, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565213168675	Marionette	INFO	Stopped listening on port 61861
[GPU 18380, C
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213174702	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.lLIKzcNls2xO"
1565213175203	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213175203	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213175204	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213175204	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213177049	Marionette	INFO	Listening on port 61909
1565213177431	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 14728, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 14728, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, l[Parent 7244, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565213316854	Marionette	INFO	Stopped listening on port 61909

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213329592	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.xa7N4X9S3iNE"
1565213330102	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213330102	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213330102	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213330102	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213331908	Marionette	INFO	Listening on port 61969
1565213332337	Marionette	WARN	TLS certificate errors will be ignored for this session
console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
[Child 20888, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20888, Chrome_ChildThread] WARNING: pipe error: 101565213402253	Marionette	INFO	Stopped listening on port 61969
[GPU 20996, Chrom
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213410029	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.L2J932KqkQzO"
1565213410537	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213410538	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213410538	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213410538	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213412405	Marionette	INFO	Listening on port 62011
1565213412766	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 16992, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 161565213457163	Marionette	INFO	Stopped listening on port 62011

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GP
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213463240	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.gk7uRgcRgcHQ"
1565213463767	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213463767	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213463767	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213463767	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213465655	Marionette	INFO	Listening on port 62055
1565213465987	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 14188, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18860, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 181565213567368	Marionette	INFO	Stopped listening on port 62055

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 17512
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213582774	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.vOWUQXChgcJf"
1565213583310	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213583310	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213583310	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213583311	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213585120	Marionette	INFO	Listening on port 62102
1565213585525	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 20184, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20184, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_[Child 10796, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 101565213629998	Marionette	INFO	Stopped listening on port 62102

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565213637132	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.r86EEuDtB3BT"
1565213637637	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565213637637	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565213637637	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565213637637	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565213639517	Marionette	INFO	Listening on port 62138
1565213639861	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565181472444%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
[Parent 13732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 14672, Chrome_ChildThread] WARNING: pip[Parent 13732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
e error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341[Parent 13732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341

[Child 14672, Chrom[Child 5692, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 5692, Chrome_ChildThread] WARNING: p[Parent 13732, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 11888, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18312,[Child 11888, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Chil1565280330254	Marionette	INFO	Stopped listening on port 62138

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

sages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565279239627	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.tvDq8wIk2VNW"
1565279241027	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565279241028	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565279241028	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565279241028	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565279243358	Marionette	INFO	Listening on port 54217
1565279243467	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 9700, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 9700, Chrome_C[Parent 13660, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565279301317	Marionette	INFO	Stopped listening on port 54217

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 7
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565279306540	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.7inMtDX0F8tZ"
1565279306997	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565279306998	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565279306998	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565279306998	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565279308910	Marionette	INFO	Listening on port 54283
1565279309268	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[Parent 11292, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565279441681	Marionette	INFO	Stopped listening on port 54283

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565279511944	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.EjLvr6Jn15Pb"
*** You are running in headless mode.
1565279512471	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565279512471	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565279512471	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565279512472	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565279514198	Marionette	INFO	Listening on port 54342
1565279514674	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565307700630%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565308811794%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

Exiting due to channel error.
Exiting due to channel error.
5279982881	Marionette	INFO	Listening on port 54437
1565279983170	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 21196, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341[
Child 18860, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18860, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565280054159	Marionette	INFO	Stopped listening on port 54437

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 2196
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565280061722	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.hMe2HIxWttxo"
1565280062212	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565280062213	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565280062213	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565280062213	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565280064065	Marionette	INFO	Listening on port 54488
1565280064459	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 13576, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 13576, Chrome_Chi1565280072677	Marionette	INFO	Stopped listening on port 54488

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 21932, Chr
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565280185103	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.ZnKubr9Vzx2Q"
1565280185626	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565280185626	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565280185626	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565280185627	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565280187542	Marionette	INFO	Listening on port 54538
1565280187837	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 18864, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18864, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_c1565280214756	Marionette	INFO	Stopped listening on port 54538

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565280227801	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.txTY6Uhb4RdQ"
1565280228304	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565280228304	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565280228305	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565280228305	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565280230150	Marionette	INFO	Listening on port 54575
1565280230544	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 14460, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 14460, Chrome_ChildThread] 1565280263929	Marionette	INFO	Stopped listening on port 54575

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565280270998	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.18apDJo14IzB"
1565280271511	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565280271511	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565280271511	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565280271511	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565280273407	Marionette	INFO	Listening on port 54617
1565280273732	Marionette	WARN	TLS certificate errors will be ignored for this session
1565280280143	Marionette	INFO	Stopped listening on port 54617
[Child 17448, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[GPU
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565280297929	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.MAnsSVklq1pR"
1565280298441	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565280298441	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565280298441	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565280298441	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565280300353	Marionette	INFO	Listening on port 54655
1565280300662	Marionette	WARN	TLS certificate errors will be ignored for this session
1565280306937	Marionette	INFO	Stopped listening on port 54655
[Child 13712, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 13712, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1[Child 15672, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15672, Chrome_ChildThrea
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565280350525	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.dMf3whAUOB8z"
1565280351044	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565280351044	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565280351044	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565280351044	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565280352889	Marionette	INFO	Listening on port 54701
1565280353260	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: "TypeError: currentNode is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:64:20\nonMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
TypeError: currentNode is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:64:20
onMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

JavaScript warning: resource://devtools/client/shared/demangle.js, line 0: Successfully compiled asm.js code (total compilation time 81ms)
console.error: "No localization found for [table.headers.cookies.hostOnly]"
console.error: "No localization found for [table.headers.cookies.isSecure]"
console.error: "No localization found for [table.headers.cookies.isHttpOnly]"
console.error: "Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15\nupdateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32\nonNewSelection@resource://devtools/client/inspector/inspector.js:1297:10\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\nsetNodeFront@resource://devtools/client/framework/selection.js:153:10\nonDetached@resource://devtools/client/inspector/inspector.js:1371:20\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\n_onMutations@resource://devtools/client/framework/selection.js:105:12\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
Error: Can not send request because front 'domnode' is already destroyed.: generateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1493:15
updateSelectionCssSelector@resource://devtools/client/inspector/inspector.js:1227:32
onNewSelection@resource://devtools/client/inspector/inspector.js:1297:10
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
setNodeFront@resource://devtools/client/framework/selection.js:153:10
onDetached@resource://devtools/client/inspector/inspector.js:1371:20
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
_onMutations@resource://devtools/client/framework/selection.js:105:12
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.error: "TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24\nonMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11\nemit@resource://devtools/shared/event-emitter.js:186:24\nemit@resource://devtools/shared/event-emitter.js:267:18\ngetMutations/<@resource://devtools/shared/fronts/inspector.js:402:12\n"
TypeError: parent is null: canMutationImpactCurrentStyles@resource://devtools/client/inspector/shared/style-change-tracker.js:65:24
onMutations@resource://devtools/client/inspector/shared/style-change-tracker.js:82:11
emit@resource://devtools/shared/event-emitter.js:186:24
emit@resource://devtools/shared/event-emitter.js:267:18
getMutations/<@resource://devtools/shared/fronts/inspector.js:402:12

console.error: "Error while calling actor 'domwalker's method 'search'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [inIDeepTreeWalker.currentNode]"
console.error: "DocumentWalker@resource://devtools/server/actors/inspector/document-walker.js:61:34\ngetNonAnonymousDocumentWalker@resource://devtools/server/actors/inspector/walker.js:242:12\ngetDocumentWalker@resource://devtools/server/actors/inspector/walker.js:254:19\nindex@resource://devtools/server/actors/utils/walker-search.js:88:40\nget data@resource://devtools/server/actors/utils/walker-search.js:63:12\n_searchIndex@resource://devtools/server/actors/utils/walker-search.js:175:34\nsearch@resource://devtools/server/actors/utils/walker-search.js:231:10\nsearch@resource://devtools/server/actors/inspector/walker.js:1077:39\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [inIDeepTreeWalker.currentNode]"
JavaScript error: chrome://global/content/elements/browser-custom-element.js, line 1099: uncaught exception: 2147500033
JavaScript error: chrome://global/content/elements/browser-custom-element.js, line 1099: uncaught exception: 2147500033
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.error: "Error while calling actor 'domwalker's method 'getNodeFromActor'" "Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.error: "getNodeFromActor@resource://devtools/server/actors/inspector/walker.js:2189:7\nhandler@resource://devtools/shared/protocol.js:1189:37\nonPacket@resource://devtools/server/main.js:1291:58\nreceiveMessage@resource://devtools/shared/transport/child-transport.js:66:16\n"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:"", description:"", keyboardShortcut:"", domNodeType:9, indexInParent:0, states:["focused", "readonly", "focusable", "active", "opaque", "enabled", "sensitive"], actions:["Click"], attributes:{'line-number':"1", 'margin-left':"0px", 'text-align':"start", 'text-indent':"0px", 'margin-right':"0px", tag:"body", class:"page-header-fixed ui-mobile-viewport ui-overlay-a page page-sidebar-fixed page-footer-fixed", 'margin-top':"0px", 'margin-bottom':"0px", display:"block", 'explicit-name':"true"}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1397}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1413}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1413}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1413}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
console.warn: "Error fetching accessible details: " ({conn:{_transport:{other:{other:{}, hooks:{_prefix:"server1.conn0.", _transport:{}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}, _serial:{count:1413}, close:function bound close() {
    [native code]
}}, hooks:{}, _serial:{count:1413}, close:function bound close() {
    [native code]
}, _serverConnection:{_prefix:"server1.conn0.", _transport:{other:{}, hooks:{}, _serial:{count:1413}, close:function bound close() {
    [native code]
}}, _nextID:16, _socketListener:null, _actorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, _extraPools:[{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}, {conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, {conn:{}, actorID:"server1.conn0.netEvent4", _actorSpec:{typeName:"netEvent", methods:[{name:"release", request:{type:"release", template:{type:"release"}, args:[]}, response:{template:{}}, release:true, oneway:(void 0)}, {name:"getRequestHeaders", request:{type:"getRequestHeaders", template:{type:"getRequestHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestCookies", request:{type:"getRequestCookies", template:{type:"getRequestCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getRequestPostData", request:{type:"getRequestPostData", template:{type:"getRequestPostData"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseHeaders", request:{type:"getResponseHeaders", template:{type:"getResponseHeaders"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCookies", request:{type:"getResponseCookies", template:{type:"getResponseCookies"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseCache", request:{type:"getResponseCache", template:{type:"getResponseCache"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getResponseContent", request:{type:"getResponseContent", template:{type:"getResponseContent"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getEventTimings", request:{type:"getEventTimings", template:{type:"getEventTimings"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getSecurityInfo", request:{type:"getSecurityInfo", template:{type:"getSecurityInfo"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}, {name:"getStackTrace", request:{type:"getStackTrace", template:{type:"getStackTrace"}, args:[]}, response:{template:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, retVal:{get type() {
      // Redefine this accessor property as a data property.
      // Delete it first, to rule out "too much recursion" in case object is
      // a proxy whose defineProperty handler might unwittingly trigger this
      // getter again.
      delete object[name];
      const value = lambda.apply(object);
      Object.defineProperty(object, name, {
        value,
        writable: true,
        configurable: true,
        enumerable: true,
      });
      return value;
    }}, path:[]}, release:(void 0), oneway:(void 0)}], events:{}}, netMonitorActor:{conn:{}, actorID:"server1.conn0.child1-consoleActor2/network-monitor3", _actorSpec:{typeName:"network-monitor", methods:[]}, _netEvents:{}, _networkEventActorsByURL:{}, parentID:"server1.conn0.child1/consoleActor2", messageManager:{}, observer:{filters:{outerWindowID:6442450945}, owner:{}, openRequests:{}, openResponses:{}, blockedURLs:{}, _httpResponseExaminer:function bound () {
    [native code]
}, _httpModifyExaminer:function bound () {
    [native code]
}, _httpFailedOpening:function bound () {
    [native code]
}, _serviceWorkerRequest:function bound _serviceWorkerRequest() {
    [native code]
}, _throttleData:null, _throttler:null, responsePipeSegmentSize:32768, interceptedChannels:{}, saveRequestAndResponseBodies:true}, stackTraces:{}, onStackTraceAvailable:function bound onStackTraceAvailable() {
    [native code]
}, onRequestContent:function bound onRequestContent() {
    [native code]
}, onSetPreference:function bound onSetPreference() {
    [native code]
}, onBlockRequest:function bound onBlockRequest() {
    [native code]
}, onUnblockRequest:function bound onUnblockRequest() {
    [native code]
}, onGetNetworkEventActor:function bound onGetNetworkEventActor() {
    [native code]
}, onDestroyMessage:function bound onDestroyMessage() {
    [native code]
}, __poolMap:{}}, _request:{method:"GET", url:"https://192.168.0.179/favicon.ico", httpVersion:"HTTP/1.1", headers:[{name:"Host", value:"192.168.0.179"}, {name:"User-Agent", value:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"}, {name:"Accept", value:"image/webp,*/*"}, {name:"Accept-Language", value:"pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3"}, {name:"Accept-Encoding", value:"gzip, deflate, br"}, {name:"Connection", value:"keep-alive"}, {name:"Cookie", value:"password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin"}], cookies:[{name:"password", value:""}, {name:"session", value:"nWCXGJVRMlYUn0VtwvvQK0KN"}, {name:"login", value:"admin"}], headersSize:346, postData:{}, rawHeaders:"GET /favicon.ico HTTP/1.1\r\nHost: 192.168.0.179\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\r\nAccept: image/webp,*/*\r\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nCookie: password=; session=nWCXGJVRMlYUn0VtwvvQK0KN; login=admin\r\n\r\n"}, _response:{headers:[], cookies:[], content:{}}, _timings:{}, _stackTrace:true, _discardRequestBody:false, _discardResponseBody:false, _startedDateTime:"2019-08-08T16:08:42.025Z", _isXHR:false, _cause:{type:"img", loadingDocumentUri:"https://192.168.0.179/", stacktraceAvailable:true}, _fromCache:(void 0), _fromServiceWorker:(void 0), _isThirdPartyTrackingResource:false, _referrerPolicy:"", _channelId:40063454937100, _blockedReason:(void 0), _truncated:false, _private:false, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}], _actorResponses:{}, _forwardingPrefixes:{}, rootActor:{conn:{}, _parameters:{tabList:{_connection:{}, _actorByBrowser:{}, _onListChanged:null, _mustNotify:false, _testing:false, _onAndroidDocumentEvent:function bound () {
    [native code]
}, _listeningForTabClose:false, _listeningToMediator:false}, addonList:{_connection:{}, _actorByAddonId:{}, _onListChanged:null}, workerList:{_conn:{}, _options:{}, _actors:{}, _onListChanged:null, _pauseMatchingWorkers:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, serviceWorkerRegistrationList:{_conn:{}, _actors:{}, _onListChanged:null, _mustNotify:false, onRegister:function bound onRegister() {
    [native code]
}, onUnregister:function bound onUnregister() {
    [native code]
}}, processList:{_actors:{}, _onListChanged:null, _mustNotify:false, _onMessage:function bound _onMessage() {
    [native code]
}, _processScript:"data:text/javascript,sendAsyncMessage('debug:new-process');"}, globalActorFactories:{preferenceActor:{options:{id:"devtools/server/actors/preference", prefix:"preference", constructorName:"PreferenceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"preferenceActor"}, actorRegistryActor:{options:{id:"devtools/server/actors/actor-registry", prefix:"actorRegistry", constructorName:"ActorRegistryActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"actorRegistryActor"}, addonsActor:{options:{id:"devtools/server/actors/addon/addons", prefix:"addons", constructorName:"AddonsActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"addonsActor"}, deviceActor:{options:{id:"devtools/server/actors/device", prefix:"device", constructorName:"DeviceActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"deviceActor"}, heapSnapshotFileActor:{options:{id:"devtools/server/actors/heap-snapshot-file", prefix:"heapSnapshotFile", constructorName:"HeapSnapshotFileActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"heapSnapshotFileActor"}, perfActor:{options:{id:"devtools/server/actors/perf", prefix:"perf", constructorName:"PerfActor", type:{global:true}, globalActor:true, targetScopedActor:(void 0)}, name:"perfActor"}}, onShutdown:function sendShutdownEvent() {
  for (const win of Services.wm.getEnumerator(DebuggerServer.chromeWindowType)) {
    const evt = win.document.createEvent("Event");
    evt.initEvent("Debugger:Shutdown", true, false);
    win.document.documentElement.dispatchEvent(evt);
  }
}}, _onTabListChanged:function bound onTabListChanged() {
    [native code]
}, _onAddonListChanged:function bound onAddonListChanged() {
    [native code]
}, _onWorkerListChanged:function bound onWorkerListChanged() {
    [native code]
}, _onServiceWorkerRegistrationListChanged:function bound onServiceWorkerRegistrationListChanged() {
    [native code]
}, _onProcessListChanged:function bound onProcessListChanged() {
    [native code]
}, _extraActors:{}, _globalActorPool:{conn:{}}, _parentProcessTargetActor:null, _processActors:{}, actorID:"root", _tabTargetActorPool:{conn:{}, __poolMap:{}, [Symbol("EventEmitter/listeners")]:{}}}, currentPacket:(void 0), [Symbol("EventEmitter/listeners")]:{}}}, _clients:{}, _pendingRequests:{}, _activeRequests:{}, _eventsEnabled:true, traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, request:function bound request() {
    [native code]
}, localTransport:true, mainRoot:{conn:{}, __poolMap:{}, actorID:"root", _requests:[], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, applicationType:"browser", traits:{sources:true, networkMonitor:true, storageInspector:true, storageInspectorReadOnly:true, wasmBinarySource:true, bulk:true, directorScripts:true, noBlackBoxing:false, noPrettyPrinting:true, breakpointWhileRunning:true, memoryActorAllocations:true, webConsoleCommands:true, get allowChromeProcess() {
      return DebuggerServer.allowChromeProcess;
    }, profilerDataFilterable:true, heapSnapshots:true, documentLoadingMarkers:true, webExtensionAddonConnect:true, perfActorVersion:1, nativeLogpoints:true}, fronts:{}, _client:{}, [Symbol("EventEmitter/listeners")]:{}}, _listeners:{connected:[], closed:[{key:function bound destroy() {
    [native code]
}, callback:function bound destroy() {
    [native code]
}}], networkEventUpdate:[{key:function bound _onNetworkEventUpdate() {
    [native code]
}, callback:function bound _onNetworkEventUpdate() {
    [native code]
}}], paused:[], resumed:[], indexInParentChange:[], textChange:[], reorder:[]}, __pools:{}}, __poolMap:null, actorID:"server1.conn0.child1/accessible199", _requests:[{deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"getRelations", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"audit", stack:({})}, {deferred:{resolve:function () {
    [native code]
}, reject:function () {
    [native code]
}, promise:{}}, to:"server1.conn0.child1/accessible199", type:"hydrate", stack:({})}], _frontListeners:{[Symbol("EventEmitter/listeners")]:{}}, _beforeListeners:{}, _form:{actor:"server1.conn0.child1/accessible199", role:"document", name:"", childCount:7, checks:{CONTRAST:null}, value:null, description:null, keyboardShortcut:null, domNodeType:0, indexInParent:-1, states:[], actions:[], attributes:{}}, [Symbol("EventEmitter/listeners")]:{}}) "Protocol error (unknownError): Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIAccessible.DOMNode]"
JavaScript error: resource://devtools/server/actors/emulation.js, line 352: TypeError: this.targetActor.docShell is null
console.warn: "Error while detaching the thread front: 'detach' request packet to 'server1.conn0.child1/context18' can't be sent as the connection is closed."
console.error: (new Error("Connection closed, pending request to server1.conn0.child1/memoryActor6, type detach failed\n\nRequest stack:\nrequest@resource://devtools/shared/protocol.js:1386:14\ngenerateRequestMethods/</frontProto[name]@resource://devtools/shared/protocol.js:1510:19\ndestroy@resource://devtools/client/memory/panel.js:59:32\n_destroyToolbox@resource://devtools/client/framework/toolbox.js:3192:32\ndestroy@resource://devtools/client/framework/toolbox.js:3131:28\n_forgetBrowserWindow@resource://devtools/client/framework/devtools-browser.js:678:17\nhandleEvent@resource://devtools/client/framework/devtools-browser.js:699:26\n", "resource://devtools/shared/protocol.js", 1299))
[Child 9328, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 931565280705473	Marionette	INFO	Stopped listening on port 54701
[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565281238958	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.5eEaGj6BhKTM"
1565281239486	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565281239486	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565281239487	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565281239487	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565281241418	Marionette	INFO	Listening on port 55094
1565281241696	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 1004, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 1004, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565281259154	Marionette	INFO	Stopped listening on port 55094

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565281286709	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.49yoSIvMUOMe"
1565281287211	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565281287211	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565281287212	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565281287212	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565281289017	Marionette	INFO	Listening on port 55130
1565281289436	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 21088, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341[
Child 4[Child 21088, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_cha460, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 4460, C1565281295806	Marionette	INFO	Stopped listening on port 55130

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565281319142	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.nXbuhWhqz5UF"
1565281319672	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565281319672	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565281319673	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565281319673	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565281321799	Marionette	INFO	Listening on port 55165
1565281321886	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 20464, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 2046[Parent 20060, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 3524, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 351565281324224	Marionette	INFO	Stopped listening on port 55165

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565282322228	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.u4TJa9q3uscC"
1565282322749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565282322749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565282322749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565282322749	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565282324874	Marionette	INFO	Listening on port 55512
1565282324965	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565282563089	Marionette	INFO	Stopped listening on port 55512

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 7
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565282569880	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.Hx8GmZYKG4eg"
1565282570440	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565282570440	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565282570440	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565282570440	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565282572417	Marionette	INFO	Listening on port 55594
1565282572620	Marionette	WARN	TLS certificate errors will be ignored for this session
[Child 21008, Chrome_ChildThread]
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

 WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chrom[iChildum/src/chrome/common/ipc_channel_w 20460, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_156in.cc, line 341
[Child 21008, Chrome_ChildThread] WARN3383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
ING: pipe [Child 20460, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_156331565282584536	Marionette	INFO	Stopped listening on port 55594

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565282594673	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.EsVvlzcBG6lA"
1565282595209	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565282595209	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565282595210	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565282595210	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565282597114	Marionette	INFO	Listening on port 55642
1565282597403	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565282778662	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.5UU0FOxLyMl7"
1565282779192	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565282779192	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565282779193	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565282779193	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565282781115	Marionette	INFO	Listening on port 55694
1565282781387	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 20464, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 20464, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20424, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20424, Chrome_ChildThread] WARNING: pipe [Parent 20464, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565282939824	Marionette	INFO	Stopped listening on port 55694

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565282950318	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.mCoCMALUdATy"
1565282950841	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565282950842	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565282950842	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565282950842	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565282952783	Marionette	INFO	Listening on port 55756
1565282953060	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 16788, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 16788, Chrome_ChildThread] WARN1565282997225	Marionette	INFO	Stopped listening on port 55756

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565283068177	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.iKuhkIMnM4HJ"
1565283068701	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565283068701	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565283068701	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565283068701	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565283070611	Marionette	INFO	Listening on port 55811
1565283070917	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565283112705	Marionette	INFO	Stopped listening on port 55811

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 1
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565283294195	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.LKfUWEF4k1YQ"
1565283294714	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565283294714	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565283294714	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565283294714	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565283296612	Marionette	INFO	Listening on port 55870
1565283296929	Marionette	WARN	TLS certificate errors will be ignored for this session
[Parent 18032, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20888, Chrome_ChildThread] WARNING: pipe error: 109[Chi: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 34ld 22316, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win1.cc, line 341

[Child 20888, Ch[Child 22rome_Chi316, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565283337950	Marionette	INFO	Stopped listening on port 55870
[GP
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565283400031	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.VBucY3UZjopy"
1565283400546	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565283400547	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565283400547	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565283400547	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565283402421	Marionette	INFO	Listening on port 55924
1565283402762	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Parent 15928, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 15928, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 5192, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20044, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 20044, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc1565283440464	Marionette	INFO	Stopped listening on port 55924

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 2
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565283508351	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.nHQV9RUdyJb6"
1565283508899	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565283508900	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565283508900	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565283508900	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565283510809	Marionette	INFO	Listening on port 55975
1565283511073	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

[Child 13912, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 13912, Chrome_Chi1565283554218	Marionette	INFO	Stopped listening on port 55975

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565283580615	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.1246fYKwZLWU"
1565283581119	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565283581119	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565283581119	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565283581119	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565283582991	Marionette	INFO	Listening on port 56017
1565283583341	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565283672195	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.udHuJr7bSELV"
1565283672736	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565283672736	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565283672736	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565283672737	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565283674835	Marionette	INFO	Listening on port 56071
1565283674921	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565283707156	Marionette	INFO	Stopped listening on port 56071
[Parent 19144, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565288348903	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.KhfFKShiqmIb"
*** You are running in headless mode.
1565288350421	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565288350421	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565288350421	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565288350422	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565288352336	Marionette	INFO	Listening on port 57415
1565288352755	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565307700630%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565308811794%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

N	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565290764977	Marionette	INFO	Listening on port 57847
1565290765222	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565222410127%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565307700630%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565308811794%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

Exiting due to channel error.
c, line 341
[Child 22324, Chrome_ChildThread] WARNING:[Parent 23736, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565291375322	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.rubZAOXZNIeO"
1565291375859	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565291375860	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565291375860	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565291375860	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565291377806	Marionette	INFO	Listening on port 58180
1565291378070	Marionette	WARN	TLS certificate errors will be ignored for this session
1565291410475	Marionette	INFO	Stopped listening on port 58180
[Child 9480, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 9480, C[Parent 16896, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 396, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 396, [GPU 16
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565291462559	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.O0vUPzLwAbun"
*** You are running in headless mode.
1565291463159	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565291463159	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565291463159	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565291463159	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565291464807	Marionette	INFO	Listening on port 58245
1565291465286	Marionette	WARN	TLS certificate errors will be ignored for this session
1565291497768	Marionette	INFO	Stopped listening on port 58245
[Child 23148, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 23148, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/bui1565351969512	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.ZRByIHJ0Vgdo"
1565351971240	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565351971240	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565351971240	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565351971240	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565351973973	Marionette	INFO	Listening on port 61969
1565351974178	Marionette	WARN	TLS certificate errors will be ignored for this session
1565351985651	Marionette	INFO	Stopped listening on port 61969
[Parent 2676, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)

IPDL protocol error: Handler returned error code!

###!!! [Parent][DispatchAsyncMessage] Error: PLayerTransaction::Msg_ReleaseLayer Processing error: message was deserialized, but the handler returned false (indicating failure)


###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 14940, Chrome_ChildThr
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565352079807	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.KDjrbvaRwxfG"
1565352080504	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565352080504	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565352080504	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565352080504	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565352083221	Marionette	INFO	Listening on port 62028
1565352083261	Marionette	WARN	TLS certificate errors will be ignored for this session
1565352092100	Marionette	INFO	Stopped listening on port 62028
[Parent 6788, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565352116037	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.jp8QPJW111io"
*** You are running in headless mode.
1565352116656	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565352116656	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565352116656	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565352116657	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565352119010	Marionette	INFO	Listening on port 62082
1565352119581	Marionette	WARN	TLS certificate errors will be ignored for this session
1565352127041	Marionette	INFO	Stopped listening on port 62082
[Parent 10044, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18932, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18932, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565359162426	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.Ki2U68D8no2x"
*** You are running in headless mode.
1565359164075	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565359164075	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565359164075	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565359164076	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565359166097	Marionette	INFO	Listening on port 63874
1565359166293	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565344753436%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565308286119%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395212294%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

chrome/common/ipc_channel_win.cc, line 341
[Child 17308, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_15633831[Child 10440, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 104[Parent 16360, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565370978544	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.0gPDf3NqaqNz"
*** You are running in headless mode.
1565370979063	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565370979063	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565370979063	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565370979063	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565370981010	Marionette	INFO	Listening on port 63043
1565370981279	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565344753436%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565371014796	Marionette	INFO	Stopped listening on port 63043
[Parent 6304, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 10936, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 10936, Chrome_ChildThread] WA[Parent 6304, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18944, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 11565376699985	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.kpxvEJiXYbqj"
*** You are running in headless mode.
1565376701553	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565376701553	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565376701553	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565376701553	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565376703330	Marionette	INFO	Listening on port 64654
1565376703823	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565344753436%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565308286119%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395212294%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565608186544	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.4Fv56hLj549O"
*** You are running in headless mode.
1565608187001	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565608187001	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565608187001	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565608187001	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565608188728	Marionette	INFO	Listening on port 64643
1565608188776	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565608222870	Marionette	INFO	Stopped listening on port 64643
[Child 18512, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 18512, Chrome_ChildThread] WARNING: pipe error: 10[Parent 20124, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 9828, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 9828, Chrome_ChildThr1565611188676	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.M28N26qpiBCr"
*** You are running in headless mode.
1565611190270	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565611190270	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565611190271	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565611190271	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565611192153	Marionette	INFO	Listening on port 51614
1565611192518	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565611229329	Marionette	INFO	Stopped listening on port 51614
1565611255988	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.7stMNSZcmZw8"
*** You are running in headless mode.
1565611256486	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565611256487	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565611256487	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565611256487	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565611258181	Marionette	INFO	Listening on port 51714
1565611258221	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565611313580	Marionette	INFO	Stopped listening on port 51714
[Child 2968, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 2968, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565611368052	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.m36azVdUH07V"
1565611368554	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565611368555	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565611368555	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565611368555	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565611370586	Marionette	INFO	Listening on port 51829
1565611370773	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565611407010	Marionette	INFO	Stopped listening on port 51829
[Child 3960, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 3960, Chrome_ChildThread] WARNING: pipe error: 109:[Parent 11872, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 1308, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 1308[GPU 
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565611452519	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.2a2touxdKXO5"
1565611453046	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565611453046	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565611453046	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565611453047	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565611454948	Marionette	INFO	Listening on port 51916
1565611455246	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565611494030	Marionette	INFO	Stopped listening on port 51916
[Parent 17780, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Parent 17780, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15028, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15028, Chrome_ChildThread
###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost


###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565611772538	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.RkUU3FWycdtH"
1565611773045	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565611773045	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565611773045	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565611773045	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565611775087	Marionette	INFO	Listening on port 52131
1565611775259	Marionette	WARN	TLS certificate errors will be ignored for this session
1565611789164	Marionette	INFO	Stopped listening on port 52131

###!!! [Child][RunMessage] Error: Channel closing: too late to send/recv, messages will be lost

[GPU 1
###!!! [Child][MessageChannel::SendAndWait] Error: Channel error: cannot send/recv

1565614485373	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.HAnSLNkSzHUZ"
*** You are running in headless mode.
1565614486885	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565614486885	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565614486885	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565614486885	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565614488635	Marionette	INFO	Listening on port 53924
1565614488698	Marionette	WARN	TLS certificate errors will be ignored for this session
console.error: BroadcastService: 
  receivedBroadcastMessage: handler for
  remote-settings/monitor_changes
  threw error:
  Message: Error: Polling for changes failed: http://%(server)s/dummy/blocklist//buckets/monitor/collections/changes/records?_expected=%221565395285947%22 is not a valid URL..
  Stack:
    remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:201:13

1565614522072	Marionette	INFO	Stopped listening on port 53924
[Parent 4440, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
1565614767696	mozrunner::runner	INFO	Running command: "C:\\Program Files\\Mozilla Firefox\\firefox.exe" "-marionette" "-headless" "-foreground" "-no-remote" "-profile" "C:\\Users\\User\\AppData\\Local\\Temp\\rust_mozprofile.KvPT3iDwdzHU"
*** You are running in headless mode.
1565614768228	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: mozillaAddons
1565614768228	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: telemetry
1565614768228	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: resource://pdf.js/
1565614768228	addons.webextension.screenshots@mozilla.org	WARN	Loading extension 'screenshots@mozilla.org': Reading manifest: Invalid extension permission: about:reader*
1565614769837	Marionette	INFO	Listening on port 54012
1565614769923	Marionette	WARN	TLS certificate errors will be ignored for this session
1565614805054	Marionette	INFO	Stopped listening on port 54012
[Child 15412, Chrome_ChildThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
[Child 15412, [Parent 7160, Gecko_IOThread] WARNING: pipe error: 109: file z:/task_1563383129/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 341
